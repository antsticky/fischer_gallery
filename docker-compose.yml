services:
  mongodb:
    container_name: gallery_db
    image: mongo:latest
    restart: always
    command: [--auth]
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_READ_WRITE_USER=${MONGO_READ_WRITE_USER}
      - MONGO_READ_WRITE_PASSWORD=${MONGO_READ_WRITE_PASSWORD}
      - MONGO_READ_USERNAME=${MONGO_READ_USERNAME}
      - MONGO_READ_PASSWORD=${MONGO_READ_PASSWORD}
      - MONGO_USER_READ_USERNAME=${MONGO_USER_READ_USERNAME}
      - MONGO_USER_READ_PASSWORD=${MONGO_USER_READ_PASSWORD}
      - MONGO_USER_ADMIN_USERNAME=${MONGO_USER_ADMIN_USERNAME}
      - MONGO_USER_ADMIN_PASSWORD=${MONGO_USER_ADMIN_PASSWORD}
    ports:
      - ${MONGODB_PORT}:${MONGODB_PORT}
    expose:
      - ${MONGODB_PORT}
    volumes:
      - ./db/data:/data/db
      - ./db/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    env_file: .env
    networks:
      - dev

  frontend:
    container_name: gallery_frontend
    image: node:20-alpine
    restart: unless-stopped
    volumes:
      - ./frontend:/frontend
    expose:
      - ${FRONTEND_PORT}
    working_dir: /frontend  # Set the working directory to the project root
    command: npm start -- --port=${FRONTEND_PORT}
    env_file: .env
    networks:
      - dev

  nginx:
    image: nginx:stable-alpine
    restart: always
    container_name: gallery_nginx
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}  # Expose Nginx on the host
    volumes:
      - ./nginx:/etc/nginx/templates  # Use a custom Nginx configuration
    depends_on:
      - mongodb
      - frontend
    networks:
      - dev
    env_file: .env
    command: /bin/sh -c "if [ ! -f /etc/nginx/conf.d/gallery.conf ]; then envsubst '$$FRONTEND_PORT $$MONGODB_PORT $$NGINX_PORT' < /etc/nginx/templates/nginx.conf.tpl > /etc/nginx/conf.d/gallery.conf; fi && nginx -g 'daemon off;'"


networks:
  dev:
    driver: bridge
